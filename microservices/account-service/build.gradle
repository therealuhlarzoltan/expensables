plugins {
	id 'java'
	id 'org.springframework.boot' version '3.3.2'
	id 'io.spring.dependency-management' version '1.1.6'
}

group = 'hu.therealuhlarzoltan.expensables.microservices'
version = '1.0.0-SNAPSHOT'

java {
	toolchain {
		languageVersion = JavaLanguageVersion.of(22)
	}
}

configurations {
	compileOnly {
		extendsFrom annotationProcessor
	}
}

repositories {
	mavenCentral()
}

jar {
	enabled = false
}

ext {
	mapStructVersion = "1.5.5.Final"
	lombokVersion = "1.18.32"
	mainClassName = "AccountServiceApplication"
	springCloudVersion = "2023.0.3"
}

dependencies {
	//internal
	implementation project(':api')
	implementation project(':util')

	//lombok
	compileOnly "org.projectlombok:lombok:${lombokVersion}"
	annotationProcessor "org.projectlombok:lombok:${lombokVersion}"
	testCompileOnly "org.projectlombok:lombok:${lombokVersion}"
	testAnnotationProcessor "org.projectlombok:lombok:${lombokVersion}"

	//mapStruct
	implementation "org.mapstruct:mapstruct:${mapStructVersion}"
	annotationProcessor "org.mapstruct:mapstruct-processor:${mapStructVersion}"

	//mongoDB
	implementation 'org.springframework.boot:spring-boot-starter-data-mongodb'
	implementation 'org.springframework.boot:spring-boot-starter-data-mongodb-reactive'

	//rabbitMQ
	implementation 'org.springframework.boot:spring-boot-starter-amqp'
	implementation 'org.springframework.amqp:spring-rabbit-stream'
	testImplementation 'org.springframework.amqp:spring-rabbit-test'

	//eureka
	implementation 'org.springframework.cloud:spring-cloud-starter-netflix-eureka-client'

	//springBootStarters
	implementation 'org.springframework.boot:spring-boot-starter-actuator'
	implementation 'org.springdoc:springdoc-openapi-starter-webmvc-ui:2.1.0'
	implementation 'org.springframework.boot:spring-boot-starter-validation'
	implementation 'org.springframework.boot:spring-boot-starter-web'
	implementation 'org.springframework.boot:spring-boot-starter-webflux'
	testImplementation 'org.springframework.boot:spring-boot-starter-test'
	testImplementation 'io.projectreactor:reactor-test'
	testRuntimeOnly 'org.junit.platform:junit-platform-launcher'
}

dependencyManagement {
	imports {
		mavenBom "org.springframework.cloud:spring-cloud-dependencies:${springCloudVersion}"
	}
}

tasks.named('test') {
	useJUnitPlatform()
}

tasks.named('bootJar') {
	mainClass = "hu.therealuhlarzoltan.expensables.microservices.account.${mainClassName}"
}

tasks.withType(JavaCompile) {
	options.annotationProcessorPath = configurations.annotationProcessor
	options.compilerArgs += ['-Amapstruct.defaultComponentModel=spring']
}